<apex:page showHeader="false" sidebar="false" extensions="TracRTC.CompleteRecordCtlr" standardController="Lead">

    <apex:includeLightning />
    <apex:stylesheet value="{!URLFOR($Resource.TracRTC__TracRTC_SLDS, 'assets/styles/salesforce-lightning-design-system-vf.min.css')}" />

    <style type="text/css">
        .hide {
            display: none;
        }
        body {
            overflow-x:hidden;
            height:100%;
            background-color: rgb(244, 246, 249);
        }
    </style>

    <div class="TracRTC">
        <div id="lightning" />

        <div id="tractioncomplete-vf-spinner" class="slds-align_absolute-center" role="alert" style="margin: auto; position: absolute; top: 0; left: 0; bottom: 0; right: 0;">
            <img height="48" width="48" src="{! $Resource.TracRTC__Assets + '/images/Complete-Spinner-24.svg' }" />
        </div>
    </div>

    <script>
        var parentURL = "{!JSENCODE($CurrentPage.parameters.parent_domain)}";

        var sourceURL = "{!URLFOR('/apex/TracRTC__CompleteRecord')}";
        sourceURL = sourceURL.replace("/apex/CompleteRecord","").toLowerCase();

        $Lightning.use("TracRTC:lcvfTractionComplete", function() {
          $Lightning.createComponent(
            "TracRTC:CompleteRecord",
            {
                recordId : "{!recordId}",
                sourceURL : sourceURL,
                userContext : "classic",
                sessionId : "{!$Api.Session_ID}"
            },
            "lightning",
            function(cmp) {
                // Fix to downscale font size on visualforce
                // slds-scope class will be added by default, 
                // making the font bigger, so we remove it here
              document.getElementById("lightning").className = "";
              document.getElementById("tractioncomplete-vf-spinner").className = "hide";
            });
        });

        /**
         * Receives messages from lightning components and passes them through to
         * the javascript button listener that called this page
         * @method receiveMessage
         * @param        event The message event, contains origin and sent data
         */
        function receiveMessage(event) {
            if (event.origin !== sourceURL)
                return;
            if(event.data === 'refresh_window') {
                if(window && window.opener && window.opener.location) {
                    window.opener.location.href = "/{!JSENCODE(Lead.Id)}";
                }
                if(window && window.top) {
                    window.top.close();
                }
            } else if(event.data === 'close_modal') {
                if(window && window.top) {
                    window.top.close();
                }
            }
        }
        window.addEventListener("message", receiveMessage, false);
    </script>
</apex:page>